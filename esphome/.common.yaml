#####################################"###
# Fichier Communs a tout les esphomes
# bien renseigner la partie subsitution
#V1.7 modif time
#V1.6 modif name
#V1.5 modif logger
#V1.4 ota correction
#V1.3 ajout ip fixe
#V1.2 correction msdn 
#V1.1 ajout key
#V1.0 base
######
# Core Configuration: https://esphome.io/components/esphome.html

## device settings
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  comment: ${device_description}
  project:
    name: ${projectname}
    version: ${appversion}

# WiFi Component: https://esphome.io/components/wifi.html
## ---------------------------------------------------
## WIFI Settings 2 wifis
## ---------------------------------------------------
wifi:
  networks:
      ## domotique
    - ssid: !secret wifi_ssid2
      password: !secret wifi_password2
      priority: 0
      ### maison
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
      priority: 1
  manual_ip:
    static_ip: ${adress_ip}
    gateway: ${gateway_ip}
    subnet: 255.255.255.0    
    #dns1: ${dns_ip}
  #domain: !secret domain
  ap:
    # ssid (Optional, string): The name of the access point to create. Leave empty to use the device name.
    password: !secret ota_pswd

## ---------------------------------------------------
## mDNS Component
## ---------------------------------------------------
mdns:
  # if mDNS is disabled, they will no longer be able to automatically find your devices.
  # It is recommended to leave mDNS enabled.
  disabled: true
 
 
## logger settings
# Logger Component: https://esphome.io/components/logger.html
logger:
  level: ${log_level}  # not that logging need memory, so in production mode use "WARN"
  baud_rate: ${baud_ratelog}  # use 0 to disable serial UART port logging.
  esp8266_store_log_strings_in_flash: false
    # Quieten the warnings about delays
  logs:
    tdisplays3.display: ERROR
    component: ERROR
# Native API Component: https://esphome.io/components/api.html
api:
  encryption:
    key: $api_encryption_key
  #password: $api_password

# Captive Portal: https://esphome.io/components/captive_portal.html
## ---------------------------------------------------
## COMPONENT CAPTIVE PORTAL
## ---------------------------------------------------
## ---------------------------------------------------
## The captive portal component in ESPHome is a
## fallback mechanism for when connecting to the
## configured WiFi fails.
## ---------------------------------------------------
captive_portal:

# OTA Update Component: https://esphome.io/components/ota.html
## ---------------------------------------------------
## COMPONENT OTA
## ---------------------------------------------------
ota:
  password: ${ota_pswd}
  
  safe_mode: false
  on_begin:
    then:
      - logger.log:
          format: "OTA Start"
          tag: "OTA"
          level: WARN
  on_progress:
    then:
      - logger.log:
          level: WARN
          tag: "OTA"
          format: "OTA progress %0.1f%%"
          args: ["x"]
  on_end:
    then:
      - logger.log:
          format: "OTA End"
          tag: "OTA"
          level: WARN
  on_error:
    then:
      - logger.log:
          format: "OTA update error %d"
          tag: "OTA"
          level: ERROR
          args: ["x"]    

# Web Server: https://esphome.io/components/web_server.html
web_server:
  #auth:
  #  username: !secret esphome_web_server_username
  #  password: !secret esphome_web_server_password
  local: true
  port: 80
  version: 2
  #js_url: !secret webserver_jsurl

# Time: https://esphome.io/components/time.html
time:
  - platform: ${time_platform}
    id: ${time_id}
    timezone:  ${time_timezone}

# Status Binary Sensor: https://esphome.io/components/binary_sensor/status.html
binary_sensor:
  - platform: status
    name: "${sensor_prefix} - Status Esp"

# Restart Button: https://esphome.io/components/button/restart.html
switch:
  - platform: restart
    name: "${sensor_prefix} - Restart Esp"

